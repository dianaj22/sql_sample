-- MySQL Script generated by MySQL Workbench
-- Thu Jul 27 12:24:47 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema gsddb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema gsddb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `gsddb` DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci ;
USE `gsddb` ;

-- -----------------------------------------------------
-- Table `gsddb`.`employees`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gsddb`.`employees` ;

CREATE TABLE IF NOT EXISTS `gsddb`.`employees` (
  `emp_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(50) NULL DEFAULT NULL,
  `last_name` VARCHAR(50) NULL DEFAULT NULL,
  `hire_date` DATE NOT NULL,
  `salary` INT NOT NULL,
  PRIMARY KEY (`emp_id`))
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `gsddb`.`job_title`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gsddb`.`job_title` ;

CREATE TABLE IF NOT EXISTS `gsddb`.`job_title` (
  `emp_id` INT NOT NULL AUTO_INCREMENT,
  `position` VARCHAR(100) NOT NULL,
  `job_description` VARCHAR(150) NOT NULL,
  INDEX `emp_id` (`emp_id` ASC) VISIBLE,
  CONSTRAINT `job_title_ibfk_1`
    FOREIGN KEY (`emp_id`)
    REFERENCES `gsddb`.`employees` (`emp_id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `gsddb`.`personal_data`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gsddb`.`personal_data` ;

CREATE TABLE IF NOT EXISTS `gsddb`.`personal_data` (
  `emp_id` INT NOT NULL AUTO_INCREMENT,
  `birth_date` DATE NOT NULL,
  `email_address` VARCHAR(100) NOT NULL,
  `phone` VARCHAR(25) NOT NULL,
  `address` VARCHAR(50) NOT NULL,
  `marital_status` ENUM('Single', 'Married', 'Divorced', 'Other') NULL DEFAULT NULL,
  `age` VARCHAR(50) NOT NULL,
  UNIQUE INDEX `emp_id_UNIQUE` (`emp_id` ASC),
  CONSTRAINT `personal_data_ibfk_1`
    FOREIGN KEY (`emp_id`)
    REFERENCES `gsddb`.`employees` (`emp_id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;


-- -----------------------------------------------------
-- Table `gsddb`.`previous_company`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `gsddb`.`previous_company` ;

CREATE TABLE IF NOT EXISTS `gsddb`.`previous_company` (
  `emp_id` INT NOT NULL AUTO_INCREMENT,
  `lastCompanyName` VARCHAR(50) NOT NULL,
  `lastCompanyAddress` VARCHAR(100) NOT NULL,
  `lastCompanyPhone` VARCHAR(25) NOT NULL,
  `start_date` DATE NOT NULL,
  `end_date` DATE NOT NULL,
  INDEX `emp_id` (`emp_id` ASC) VISIBLE,
  CONSTRAINT `previous_company_ibfk_1`
    FOREIGN KEY (`emp_id`)
    REFERENCES `gsddb`.`employees` (`emp_id`)
    ON DELETE CASCADE)
ENGINE = InnoDB
AUTO_INCREMENT = 5
DEFAULT CHARACTER SET = utf8mb4
COLLATE = utf8mb4_0900_ai_ci;

USE `gsddb` ;

-- -----------------------------------------------------
-- procedure GetEmployeeInfo
-- -----------------------------------------------------

USE `gsddb`;
DROP procedure IF EXISTS `gsddb`.`GetEmployeeInfo`;

DELIMITER $$
USE `gsddb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `GetEmployeeInfo`(IN employee_name VARCHAR(100))
BEGIN
    DECLARE employee_id INT;
    DECLARE last_company_name VARCHAR(50);

    SELECT emp_id INTO employee_id FROM employees WHERE first_name = employee_name OR last_name = employee_name;

    SELECT lastCompanyName INTO last_company_name
    FROM previous_company
    WHERE emp_id = employee_id
    ORDER BY end_date DESC
    LIMIT 1;

    SELECT
        CONCAT(e.first_name, ' ', e.last_name) AS employee_name,
        last_company_name,
        pd.address,
        pd.email_address,
        pd.phone
    FROM
        employees e
    LEFT JOIN personal_data pd ON e.emp_id = pd.emp_id
    WHERE (e.first_name = employee_name OR e.last_name = employee_name)
    AND pd.emp_id = employee_id;
END$$

DELIMITER ;

-- -----------------------------------------------------
-- procedure employeeName
-- -----------------------------------------------------

USE `gsddb`;
DROP procedure IF EXISTS `gsddb`.`employeeName`;

DELIMITER $$
USE `gsddb`$$
CREATE DEFINER=`root`@`localhost` PROCEDURE `employeeName`(IN employee_name VARCHAR(100))
BEGIN
    DECLARE employee_id INT;
    DECLARE last_company_name VARCHAR(50);

    SELECT emp_id INTO employee_id FROM employees WHERE first_name = employee_name OR last_name = employee_name;
	SELECT lastCompanyName INTO last_company_name FROM previous_company
    
    WHERE emp_id = employee_id
    
    ORDER BY end_date DESC
    LIMIT 1;

    SELECT
        CONCAT(e.first_name, ' ', e.last_name) AS employee_name, last_company_name,
        pd.address
       
    FROM
        employees e
    LEFT JOIN personal_data pd ON e.emp_id = pd.emp_id
    WHERE (e.first_name = employee_name OR e.last_name = employee_name)
    AND pd.emp_id = employee_id;
END$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
